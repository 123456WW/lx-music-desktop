{
  "name": "lx-music-desktop",
  "version": "2.4.0-beta.8",
  "description": "一个免费的音乐查找助手",
  "main": "./dist/main/main.js",
  "productName": "lx-music-desktop",
  "scripts": {
    "pack": "ts-node build-config/pack.js && npm run pack:win:setup:x64",
    "pack:win": "ts-node build-config/pack.js && npm run pack:win:setup:x64 && npm run pack:win:setup:x86 && npm run pack:win:setup:arm64 && npm run pack:win:setup:x86_64 && npm run pack:win:7z",
    "pack:win:setup:x86_64": "cross-env TARGET=Setup ARCH=x86_64 electron-builder -w=nsis --x64 --ia32 -p never",
    "pack:win:setup:x64": "cross-env TARGET=Setup ARCH=x64 electron-builder -w=nsis --x64 -p never",
    "pack:win:setup:x86": "cross-env TARGET=Setup ARCH=x86 electron-builder -w=nsis --ia32 -p never",
    "pack:win:setup:arm64": "cross-env TARGET=Setup ARCH=arm64 electron-builder -w=nsis --arm64 -p never",
    "pack:win:portable": "npm run pack:win:portable:x86_64 && npm run pack:win:portable:x64 && npm run pack:win:portable:x86",
    "pack:win:portable:x86_64": "cross-env TARGET=portable ARCH=x86_64 electron-builder -w=portable --x64 --ia32 -p never",
    "pack:win:portable:x64": "cross-env TARGET=portable ARCH=x64 electron-builder -w=portable --x64 -p never",
    "pack:win:portable:x86": "cross-env TARGET=portable ARCH=x86 electron-builder -w=portable --ia32 -p never",
    "pack:win:7z": "npm run pack:win:7z:x64 && npm run pack:win:7z:x86",
    "pack:win:7z:x64": "cross-env TARGET=green ARCH=win_x64 electron-builder -w=7z --x64 -p never",
    "pack:win:7z:x86": "cross-env TARGET=green ARCH=win_x86 electron-builder -w=7z --ia32 -p never",
    "pack:win:7z:arm64": "cross-env TARGET=green ARCH=win_arm64 electron-builder -w=7z --arm64 -p never",
    "pack:linux": "ts-node build-config/pack.js && npm run pack:linux:deb && npm run pack:linux:appImage && npm run pack:linux:rpm && npm run pack:linux:pacman",
    "pack:linux:appImage": "cross-env ARCH=x64 electron-builder -l=AppImage -p never",
    "pack:linux:deb": "npm run pack:linux:deb:x64 && npm run pack:linux:deb:arm64 && npm run pack:linux:deb:armv7l",
    "pack:linux:deb:x64": "cross-env ARCH=x64 electron-builder -l=deb --x64 -p never",
    "pack:linux:deb:arm64": "cross-env ARCH=arm64 electron-builder -l=deb --arm64 -p never",
    "pack:linux:deb:armv7l": "cross-env ARCH=armv7l electron-builder -l=deb --armv7l -p never",
    "pack:linux:rpm": "cross-env ARCH=x64 electron-builder -l=rpm --x64 -p never",
    "pack:linux:pacman": "cross-env ARCH=x64 electron-builder -l=pacman --x64 -p never",
    "pack:mac": "ts-node build-config/pack.js && npm run pack:mac:dmg && npm run pack:mac:dmg:arm64",
    "pack:mac:dmg": "cross-env electron-builder -m=dmg -p never",
    "pack:mac:dmg:arm64": "cross-env electron-builder -m=dmg --arm64 -p never",
    "pack:dir": "ts-node build-config/pack.js && electron-builder --dir",
    "publish": "node publish",
    "publish:win:setup:x64:always": "cross-env TARGET=Setup ARCH=x64 electron-builder -w=nsis --x64 -p always",
    "publish:win:setup:x64": "cross-env TARGET=Setup ARCH=x64 electron-builder -w=nsis --x64 -p always",
    "publish:win:setup:x86": "cross-env TARGET=Setup ARCH=x86 electron-builder -w=nsis --ia32 -p onTagOrDraft",
    "publish:win:setup:arm64": "cross-env TARGET=Setup ARCH=arm64 electron-builder -w=nsis --arm64 -p onTagOrDraft",
    "publish:win:setup:x86_64": "cross-env TARGET=Setup ARCH=x86_64 electron-builder -w=nsis --x64 --ia32 -p onTagOrDraft",
    "publish:win:portable": "npm run publish:win:portable:x86_64 && npm run publish:win:portable:x64 && npm run publish:win:portable:x86",
    "publish:win:portable:x86_64": "cross-env TARGET=portable ARCH=x86_64 electron-builder -w=portable --x64 --ia32 -p onTagOrDraft",
    "publish:win:portable:x64": "cross-env TARGET=portable ARCH=x64 electron-builder -w=portable --x64 -p onTagOrDraft",
    "publish:win:portable:x86": "cross-env TARGET=portable ARCH=x86 electron-builder -w=portable --ia32 -p onTagOrDraft",
    "publish:win:7z:x64": "cross-env TARGET=green ARCH=win_x64 electron-builder -w=7z --x64 -p onTagOrDraft",
    "publish:win:7z:x86": "cross-env TARGET=green ARCH=win_x86 electron-builder -w=7z --ia32 -p onTagOrDraft",
    "publish:win:7z:arm64": "cross-env TARGET=green ARCH=win_arm64 electron-builder -w=7z --arm64 -p onTagOrDraft",
    "publish:mac:dmg:always": "electron-builder -m=dmg -p always",
    "publish:mac:dmg": "electron-builder -m=dmg -p onTagOrDraft",
    "publish:mac:dmg:arm64": "electron-builder -m=dmg --arm64 -p onTagOrDraft",
    "publish:linux:deb:x64:always": "cross-env ARCH=x64 electron-builder -l=deb --x64 -p always",
    "publish:linux:deb:x64": "cross-env ARCH=x64 electron-builder -l=deb --x64 -p onTagOrDraft",
    "publish:linux:deb:arm64": "cross-env ARCH=arm64 electron-builder -l=deb --arm64 -p onTagOrDraft",
    "publish:linux:deb:armv7l": "cross-env ARCH=armv7l electron-builder -l=deb --armv7l -p onTagOrDraft",
    "publish:linux:appImage": "cross-env ARCH=x64 electron-builder -l=AppImage -p onTagOrDraft",
    "publish:linux:rpm": "cross-env ARCH=x64 electron-builder -l=rpm --x64 -p onTagOrDraft",
    "publish:linux:pacman": "cross-env ARCH=x64 electron-builder -l=pacman --x64 -p onTagOrDraft",
    "dev": "cross-env NODE_OPTIONS=--max-http-header-size=200000 ts-node build-config/runner-dev.js",
    "build:theme": "node src/common/theme/createThemes.js",
    "build": "ts-node build-config/pack.js",
    "lint": "eslint --ext .ts,.js,.vue src",
    "lint:fix": "eslint --ext .ts,.js,.vue --fix src",
    "postinstall": "node ./build-config/dependencies-patch.js && electron-builder install-app-deps",
    "dp": "cross-env ELECTRON_GET_USE_PROXY=true GLOBAL_AGENT_HTTPS_PROXY=http://127.0.0.1:2081 npm run pack",
    "up": "cross-env ELECTRON_GET_USE_PROXY=true GLOBAL_AGENT_HTTPS_PROXY=http://127.0.0.1:2081 npm i"
  },
  "browserslist": [
    "Electron 22.3.0"
  ],
  "engines": {
    "node": ">= 16",
    "npm": ">=8.5.2"
  },
  "build": {
    "appId": "cn.toside.music.desktop",
    "beforePack": "./build-config/build-before-pack.js",
    "afterPack": "./build-config/build-after-pack.js",
    "protocols": {
      "name": "lx-music-protocol",
      "schemes": [
        "lxmusic"
      ]
    },
    "directories": {
      "buildResources": "./resources",
      "output": "./build"
    },
    "files": [
      "!node_modules/**/*",
      "node_modules/font-list",
      "node_modules/better-sqlite3/lib",
      "node_modules/better-sqlite3/package.json",
      "node_modules/better-sqlite3/build/Release/better_sqlite3.node",
      "node_modules/electron-font-manager/index.js",
      "node_modules/electron-font-manager/package.json",
      "node_modules/electron-font-manager/build/Release/font_manager.node",
      "node_modules/node-gyp-build",
      "node_modules/bufferutil",
      "node_modules/utf-8-validate",
      "build/Release/qrc_decode.node",
      "dist/**/*"
    ],
    "asar": {
      "smartUnpack": false
    },
    "extraResources": [
      "./licenses"
    ],
    "win": {
      "icon": "./resources/icons/icon.ico",
      "legalTrademarks": "lyswhut",
      "artifactName": "${productName} v${version} ${env.ARCH} ${env.TARGET}.${ext}"
    },
    "mac": {
      "icon": "./resources/icons/icon.icns",
      "category": "public.app-category.music"
    },
    "linux": {
      "maintainer": "lyswhut <lyswhut@qq.com>",
      "artifactName": "${productName} v${version} ${env.ARCH}.${ext}",
      "icon": "./resources/icons",
      "category": "Utility;AudioVideo;Audio;Player;Music;",
      "desktop": {
        "Name": "LX Music",
        "Name[zh_CN]": "LX Music",
        "Name[zh_TW]": "LX Music",
        "Encoding": "UTF-8",
        "MimeType": "x-scheme-handler/lxmusic",
        "StartupNotify": "false"
      }
    },
    "nsis": {
      "oneClick": false,
      "language": "2052",
      "allowToChangeInstallationDirectory": true,
      "differentialPackage": true,
      "license": "./licenses/license.rtf",
      "shortcutName": "LX Music"
    },
    "dmg": {
      "window": {
        "width": 600,
        "height": 400
      },
      "contents": [
        {
          "x": 106,
          "y": 252,
          "name": "LX Music"
        },
        {
          "x": 490,
          "y": 252,
          "type": "link",
          "path": "/Applications"
        }
      ],
      "title": "洛雪音乐助手 v${version}"
    },
    "appImage": {
      "license": "./licenses/license_zh.txt",
      "category": "Utility;AudioVideo;Audio;Player;Music;"
    },
    "publish": [
      {
        "provider": "github",
        "owner": "lyswhut",
        "repo": "lx-music-desktop"
      }
    ]
  },
  "macLanguagesInfoPlistStrings": {
    "en": {
      "CFBundleDisplayName": "LX Music",
      "CFBundleName": "LX Music"
    },
    "zh_CN": {
      "CFBundleDisplayName": "LX Music",
      "CFBundleName": "LX Music"
    },
    "zh_TW": {
      "CFBundleDisplayName": "LX Music",
      "CFBundleName": "LX Music"
    }
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lyswhut/lx-music-desktop.git"
  },
  "keywords": [
    "music-player",
    "electron-app",
    "vuejs3"
  ],
  "author": {
    "name": "lyswhut",
    "email": "lyswhut@qq.com"
  },
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/lyswhut/lx-music-desktop/issues"
  },
  "homepage": "https://github.com/lyswhut/lx-music-desktop#readme",
  "devDependencies": {
    "@babel/core": "^7.22.10",
    "@babel/eslint-parser": "^7.22.10",
    "@babel/plugin-proposal-class-properties": "^7.18.6",
    "@babel/plugin-syntax-dynamic-import": "^7.8.3",
    "@babel/plugin-transform-modules-umd": "^7.22.5",
    "@babel/plugin-transform-runtime": "^7.22.10",
    "@babel/preset-env": "^7.22.10",
    "@babel/preset-typescript": "^7.22.5",
    "@tsconfig/recommended": "^1.0.2",
    "@types/better-sqlite3": "^7.6.4",
    "@types/needle": "^3.2.0",
    "@types/node": "^20.4.10",
    "@types/spinnies": "^0.5.0",
    "@types/tunnel": "^0.0.3",
    "@types/ws": "8.5.4",
    "@typescript-eslint/parser": "^5.62.0",
    "@vitejs/plugin-vue": "^4.2.3",
    "@vue/eslint-config-typescript": "^11.0.3",
    "@vue/language-plugin-pug": "^1.8.8",
    "@vue/tsconfig": "^0.4.0",
    "browserslist": "^4.21.10",
    "chalk": "^4.1.2",
    "changelog-parser": "^3.0.1",
    "cross-env": "^7.0.3",
    "del": "^6.1.1",
    "electron": "^22.3.18",
    "electron-builder": "^24.6.3",
    "electron-debug": "^3.2.0",
    "electron-devtools-installer": "^3.2.0",
    "electron-to-chromium": "^1.4.490",
    "electron-updater": "^6.1.4",
    "eslint-config-standard": "^17.1.0",
    "eslint-config-standard-with-typescript": "^35.0.0",
    "eslint-plugin-html": "^7.1.0",
    "eslint-plugin-vue": "^9.17.0",
    "eslint-plugin-vue-pug": "^0.6.0",
    "less": "^4.2.0",
    "postcss-pxtorem": "^6.0.0",
    "pug": "^3.0.2",
    "spinnies": "github:lyswhut/spinnies#233305c58694aa3b053e3ab9af9049993f918b9d",
    "ts-node": "^10.9.1",
    "typescript": "^5.1.6",
    "vite": "^4.4.9",
    "vite-plugin-electron-renderer": "^0.14.5",
    "vite-plugin-svg-icons": "^2.0.1",
    "vue-eslint-parser": "^9.3.1"
  },
  "dependencies": {
    "@simonwep/pickr": "^1.8.2",
    "better-sqlite3": "^8.5.0",
    "bufferutil": "^4.0.7",
    "comlink": "~4.3.1",
    "crypto-js": "^4.1.1",
    "electron-font-manager": "github:lyswhut/electron-font-manager#6d2f5ecf850c4fe34812b9394913680462ee0dae",
    "electron-log": "^5.0.0-beta.25",
    "electron-store": "^8.1.0",
    "font-list": "^1.5.0",
    "iconv-lite": "^0.6.3",
    "image-size": "^1.0.2",
    "jschardet": "^3.0.0",
    "long": "^5.2.3",
    "message2call": "^0.1.0",
    "music-metadata": "^8.1.4",
    "needle": "github:lyswhut/needle#93299ac841b7e9a9f82ca7279b88aaaeda404060",
    "node-id3": "^0.2.6",
    "sortablejs": "^1.15.0",
    "tunnel": "^0.0.6",
    "utf-8-validate": "^6.0.3",
    "vue": "~3.2.47",
    "vue-router": "^4.2.4",
    "ws": "^8.13.0"
  },
  "overrides": {
    "got": "^11",
    "json5": "latest",
    "minimatch": "latest",
    "semver": "latest",
    "svg-sprite-loader": {
      "postcss": "latest"
    },
    "svg-baker": {
      "postcss": "latest"
    },
    "http-cache-semantics": "latest"
  }
}
